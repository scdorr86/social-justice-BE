// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace social_justice_BE.Migrations
{
    [DbContext(typeof(socialJusticeDbContext))]
    partial class socialJusticeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeetupMember", b =>
                {
                    b.Property<int>("MeetupsId")
                        .HasColumnType("integer");

                    b.Property<int>("MembersId")
                        .HasColumnType("integer");

                    b.HasKey("MeetupsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("MeetupMember");
                });

            modelBuilder.Entity("social_justice_BE.Models.Meetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("MeetTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Meetups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 10, 24, 18, 24, 29, 842, DateTimeKind.Local).AddTicks(9448),
                            Description = "meetup 1 desc",
                            ImageUrl = "https://assets.hvmag.com/2023/09/pumpkin-world-AdobeStock_626050040.jpg",
                            Location = "location 1",
                            MeetTime = new DateTime(2023, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrganizationId = 1,
                            Title = "meetup 1"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 10, 24, 18, 24, 29, 842, DateTimeKind.Local).AddTicks(9456),
                            Description = "meetup 2 desc",
                            ImageUrl = "https://assets.hvmag.com/2023/09/pumpkin-world-AdobeStock_626050040.jpg",
                            Location = "location 2",
                            MeetTime = new DateTime(2023, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrganizationId = 1,
                            Title = "meetup 2"
                        });
                });

            modelBuilder.Entity("social_justice_BE.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("MemberSince")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "user1@gmail.com",
                            FirstName = "Test",
                            ImageUrl = "https://i0.wp.com/theverybesttop10.com/wp-content/uploads/2015/03/Top-10-Dogs-With-Funny-Things-In-Their-Mouth-8-510x700.jpg?resize=600%2C824",
                            LastName = "user 1",
                            MemberSince = new DateTime(2023, 10, 24, 18, 24, 29, 842, DateTimeKind.Local).AddTicks(9476),
                            OrganizationId = 1,
                            Phone = "123-456-7890",
                            Uid = "uid1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user2@gmail.com",
                            FirstName = "Test",
                            ImageUrl = "https://joyrideharness.com/cdn/shop/articles/AdobeStock_274099078.jpg?v=1620400547",
                            LastName = "user 2",
                            MemberSince = new DateTime(2023, 10, 24, 18, 24, 29, 842, DateTimeKind.Local).AddTicks(9481),
                            OrganizationId = 1,
                            Phone = "123-456-7890",
                            Uid = "uid2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "user3@gmail.com",
                            FirstName = "Test",
                            ImageUrl = "https://hips.hearstapps.com/hmg-prod/images/dog-puns-1581708208.jpg",
                            LastName = "user 3",
                            MemberSince = new DateTime(2023, 10, 24, 18, 24, 29, 842, DateTimeKind.Local).AddTicks(9485),
                            OrganizationId = 1,
                            Phone = "123-456-7890",
                            Uid = "uid3"
                        });
                });

            modelBuilder.Entity("social_justice_BE.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Mission")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_at = new DateTime(2023, 10, 24, 18, 24, 29, 842, DateTimeKind.Local).AddTicks(9223),
                            Mission = "mission 1",
                            Name = "OrgSeed1"
                        });
                });

            modelBuilder.Entity("MeetupMember", b =>
                {
                    b.HasOne("social_justice_BE.Models.Meetup", null)
                        .WithMany()
                        .HasForeignKey("MeetupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("social_justice_BE.Models.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("social_justice_BE.Models.Meetup", b =>
                {
                    b.HasOne("social_justice_BE.Models.Organization", "Organization")
                        .WithMany("Meetups")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("social_justice_BE.Models.Member", b =>
                {
                    b.HasOne("social_justice_BE.Models.Organization", "Organization")
                        .WithMany("Members")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("social_justice_BE.Models.Organization", b =>
                {
                    b.Navigation("Meetups");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
